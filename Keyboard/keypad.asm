ASSUME CS:CODE, DS:DATA    
PORTA1 EQU 8000H
PORTB1 EQU 8002H
PORTC1 EQU 8004H
CWR1   EQU 8006H

PORTA2 EQU 0000H
PORTB2 EQU 0002H
PORTC2 EQU 0004H
CWR2   EQU 0006H

DATA SEGMENT
    ;Look up table for 7-Segment Displays 
    LUT DB 01H,79H,12H,30H,68H,24H,04H,71H,00H,60H
DATA ENDS

CODE SEGMENT 
    START:
    ;INITIALIZING DATA SEGMENT 
    MOV AX,DATA
    MOV DS,AX   
    ;WRITING CONTROL WORD FOR 8255-1
    MOV AL,82H
    MOV DX,CWR1
    OUT DX,AL
    ;WRITING CONTROL WORD FOR 8255-1
    MOV AL,80H
    MOV DX,CWR2
    OUT DX,AL
    AGAIN:
    ;Clearing Registers
    XOR AX,AX
    XOR BX,BX
    XOR CX,CX
    ;MAKING ALL ROWS ZERO
    MOV AL,00H
    MOV DX,PORTA1
    OUT DX,AL
    ;READING THE COLUMNS 
    MOV DX,PORTB1 
    LOOP1:
    IN AL,DX
    ;CHECKING FOR ALL-KEY RELESED STATE
    CMP AL,0FFH
    JNZ LOOP1
    ;CHECKING IF ANY KEY IS PRESSED 
    CHECK:
    IN AL,DX
    CMP AL,0FFH
    JZ CHECK
    ;FINDING COLUMN NUMBER
    MOV BL,00H
    LOOP2: 
    RCR AL,01H
    JNC FIND_ROW
    INC BL
    JMP LOOP2 
    ;FINDING ROW NUMBER
    FIND_ROW:
    MOV CL,00H
    MOV CH,0FEH
    LOOP3:
    MOV AL,CH
    MOV DX,PORTA1
    OUT DX,AL
    MOV DX,PORTB1
    IN AL,DX 
    CMP AL,0FFH
    JNZ FOUND_ROW
    ROL CH,01H
    INC CL
    JMP LOOP3
    ;COMPUTING 8*ROW_NUM+COL_NUM  
    FOUND_ROW:
    MOV AL,08H
    MUL CL
    ADD AL,BL
    ADD AL,01H  
    MOV DX,PORTC2
    OUT DX,AL
    ;OBTAINING SEPERATE BCD FOR 7-SEG
    MOV BH,AL
    MOV BL,0AH
    DIV BL
    MOV CL,AH
    MOV AH,00H
    MOV BL,0AH
    DIV BL
    MOV CH,AH
    ;DISPLAY ON 7-SEG
    MOV DX,PORTA2
    LEA BX,LUT
    MOV AL,CH;MS
    XLAT
    OUT DX,AL
    MOV DX,PORTB2
    LEA BX,LUT
    MOV AL,CL;LS
    XLAT
    OUT DX,AL
    JMP AGAIN 
CODE ENDS
END START
    
        
    